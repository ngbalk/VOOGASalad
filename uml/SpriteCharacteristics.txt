

public enum SpriteType {
		HERO,
		ENEMY,
		PLATFORM,
		OBSTACLE,
		REWARD
	}

public class SpriteCharacteristics {
	
	// DEFAULT VARIABLES
	public static final Image DEFAULT_IMAGE = null;
	public static final Point DEFAULT_POINT = new Point(0,0);
	public static final boolean DEFAULT_INTERACTIVE = true;
	public static final SpriteType DEFAULT_OBJECT_TYPE = null;
	public static final int DEFAULT_HEALTH = 10;
	public static final double DEFAULT_SPEED = 10;
	public static final int DEFAULT_VALUE = 0;
	public static final String DEFAULT_DIRECTION_FACING = "left";
	
	// GAME AUTHORING VARIABLES
	public Image img;
	public Point p;
	public boolean interactive;
	public SpriteType objectType;
	public int startingHealth;
	public double startingSpeed;
	public int value;
	public String startingDirectionFacing;
	
	//-------------------CONSTRUCTORS-------------------//

	/**
	 * Constructor for SpriteCharacteristics takes in an enum SpriteType t and sets values
	 * @param t
	 */
	public SpriteCharacteristics(SpriteType t){
		objectType = t;
		img = DEFAULT_IMAGE;
		p = DEFAULT_POINT;
		interactive = DEFAULT_INTERACTIVE;
		startingHealth = DEFAULT_HEALTH;
		startingSpeed = DEFAULT_SPEED;
		value = DEFAULT_VALUE;
		startingDirectionFacing = DEFAULT_DIRECTION_FACING;
	}
	
	/**
	 * Constructor that essentially "clones" another spritecharacteristics class
	 * @param obj
	 */
	public SpriteCharacteristics(SpriteCharacteristics obj) {
		objectType = obj.getObjectType();
		img = obj.getImage();
		p = obj.getPoint();
		interactive = obj.isInteractive();
		startingHealth = obj.getStartingHealth();
		startingSpeed = obj.getStartingSpeed();
		value = obj.getValue();
		startingDirectionFacing = obj.getStartingDirectionFacing();
	}

	//-------------------ACCESSORS-------------------//
	
    public Image getImage () {
        return img;
    }

    public void setImage (Image img) {
        this.img = img;
    }

    public Point getPoint () {
        return p;
    }

    public void setPoint (Point p) {
        this.p = p;
    }

    public boolean isInteractive () {
        return interactive;
    }

    public void setInteractive (boolean interactive) {
        this.interactive = interactive;
    }

    public SpriteType getObjectType () {
        return objectType;
    }

    public void setObjectType (SpriteType objectType) {
        this.objectType = objectType;
    }

    public int getStartingHealth () {
        return startingHealth;
    }

    public void setStartingHealth (int startingHealth) {
        this.startingHealth = startingHealth;
    }

    public double getStartingSpeed () {
        return startingSpeed;
    }

    public void setStartingSpeed (double startingSpeed) {
        this.startingSpeed = startingSpeed;
    }

    public int getValue () {
        return value;
    }

    public void setValue (int value) {
        this.value = value;
    }

    public String getStartingDirectionFacing () {
        return startingDirectionFacing;
    }

    public void setStartingDirectionFacing (String startingDirectionFacing) {
        this.startingDirectionFacing = startingDirectionFacing;
    }
	
}
